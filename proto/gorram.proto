syntax = "proto3";

package gorram;

service Reporter {
    rpc Ping(IsAlive) returns (IsAlive) {}
    rpc RecordIssue(stream Issue) returns (Submitted) {}
    rpc SendConfig(ConfigRequest) returns (Config) {}
}

message IsAlive {
    bool is_alive = 1;
}

message Submitted {
    bool successfully_submitted = 1;
}

message Issue {
    string title = 1;
    // Message itself
    string message = 2;
    // When issue was sent
    int64 time_submitted = 3;
}

message Config {
    // Raw gob-encoded config file
    // Passing via gob/bytes so the checks/ libs hold the structs
    bytes cfg = 1;
    int64 interval = 2;
    Deluge deluge = 3;
    DiskSpace disk = 4;
    Load load = 5;
    ProcessExists ps = 6;
}

message Deluge {
    string url = 1;
    string password = 2;
    int64 max_torrents = 3;
}

message DiskSpace {
    repeated string partitions = 1;
    double max_usage = 2;
}

message Load {
    double max_load = 1;
}

message ProcessExists {
    repeated string full_paths = 1;
}

message ConfigRequest {
    string client_name = 1;
    string cfg_sha1sum = 2;
}
