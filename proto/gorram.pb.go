// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.7
// source: proto/gorram.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAlive        bool  `protobuf:"varint,1,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"`
	CfgLastUpdated int64 `protobuf:"varint,2,opt,name=cfg_last_updated,json=cfgLastUpdated,proto3" json:"cfg_last_updated,omitempty"`
}

func (x *PingMsg) Reset() {
	*x = PingMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMsg) ProtoMessage() {}

func (x *PingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMsg.ProtoReflect.Descriptor instead.
func (*PingMsg) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{0}
}

func (x *PingMsg) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

func (x *PingMsg) GetCfgLastUpdated() int64 {
	if x != nil {
		return x.CfgLastUpdated
	}
	return 0
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgOutOfSync bool `protobuf:"varint,1,opt,name=cfg_out_of_sync,json=cfgOutOfSync,proto3" json:"cfg_out_of_sync,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetCfgOutOfSync() bool {
	if x != nil {
		return x.CfgOutOfSync
	}
	return false
}

type Submitted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessfullySubmitted bool `protobuf:"varint,1,opt,name=successfully_submitted,json=successfullySubmitted,proto3" json:"successfully_submitted,omitempty"`
}

func (x *Submitted) Reset() {
	*x = Submitted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submitted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submitted) ProtoMessage() {}

func (x *Submitted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submitted.ProtoReflect.Descriptor instead.
func (*Submitted) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{2}
}

func (x *Submitted) GetSuccessfullySubmitted() bool {
	if x != nil {
		return x.SuccessfullySubmitted
	}
	return false
}

type Issue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Host that generated the issue
	// NOTE: THIS SHOULD BE SET BY THE SERVER!
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Title of the check that generated the issue
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Message of the issue
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Issue) Reset() {
	*x = Issue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{3}
}

func (x *Issue) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Issue) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Issue) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issue *Issue `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	// When issue was sent
	TimeSubmitted int64 `protobuf:"varint,3,opt,name=time_submitted,json=timeSubmitted,proto3" json:"time_submitted,omitempty"`
	// How many times this identical alert has been sent
	Occurrences int64 `protobuf:"varint,4,opt,name=occurrences,proto3" json:"occurrences,omitempty"`
	// If alert was muted
	Muted bool `protobuf:"varint,5,opt,name=muted,proto3" json:"muted,omitempty"`
	// When issue last occurred
	TimeLast int64 `protobuf:"varint,6,opt,name=time_last,json=timeLast,proto3" json:"time_last,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{4}
}

func (x *Alert) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

func (x *Alert) GetTimeSubmitted() int64 {
	if x != nil {
		return x.TimeSubmitted
	}
	return 0
}

func (x *Alert) GetOccurrences() int64 {
	if x != nil {
		return x.Occurrences
	}
	return 0
}

func (x *Alert) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

func (x *Alert) GetTimeLast() int64 {
	if x != nil {
		return x.TimeLast
	}
	return 0
}

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientName string `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used internally to tell when config was last updated
	LastUpdated int64 `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// How often checks should be performed on the client
	Interval int64 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Configurations for various checks
	Deluge    *Config_Deluge          `protobuf:"bytes,3,opt,name=deluge,proto3" json:"deluge,omitempty"`
	Loadavg   *Config_LoadAvg         `protobuf:"bytes,4,opt,name=loadavg,proto3" json:"loadavg,omitempty"`
	Diskspace []*Config_DiskSpace     `protobuf:"bytes,5,rep,name=diskspace,proto3" json:"diskspace,omitempty"`
	Process   []*Config_ProcessExists `protobuf:"bytes,6,rep,name=process,proto3" json:"process,omitempty"`
	GetUrl    []*Config_GetURL        `protobuf:"bytes,7,rep,name=get_url,json=getUrl,proto3" json:"get_url,omitempty"`
	// A string of enabled checks
	EnabledChecks string `protobuf:"bytes,8,opt,name=enabled_checks,json=enabledChecks,proto3" json:"enabled_checks,omitempty"`
	// Whether client is required to connect
	// Since the server is stateless, this ensures an offline client is detected when the server is restarted
	Required bool             `protobuf:"varint,9,opt,name=required,proto3" json:"required,omitempty"`
	Memory   *Config_Memory   `protobuf:"bytes,10,opt,name=memory,proto3" json:"memory,omitempty"`
	Postgres *Config_Postgres `protobuf:"bytes,11,opt,name=postgres,proto3" json:"postgres,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{6}
}

func (x *Config) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *Config) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Config) GetDeluge() *Config_Deluge {
	if x != nil {
		return x.Deluge
	}
	return nil
}

func (x *Config) GetLoadavg() *Config_LoadAvg {
	if x != nil {
		return x.Loadavg
	}
	return nil
}

func (x *Config) GetDiskspace() []*Config_DiskSpace {
	if x != nil {
		return x.Diskspace
	}
	return nil
}

func (x *Config) GetProcess() []*Config_ProcessExists {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *Config) GetGetUrl() []*Config_GetURL {
	if x != nil {
		return x.GetUrl
	}
	return nil
}

func (x *Config) GetEnabledChecks() string {
	if x != nil {
		return x.EnabledChecks
	}
	return ""
}

func (x *Config) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Config) GetMemory() *Config_Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *Config) GetPostgres() *Config_Postgres {
	if x != nil {
		return x.Postgres
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When query was sent
	TimeSubmitted int64 `protobuf:"varint,3,opt,name=time_submitted,json=timeSubmitted,proto3" json:"time_submitted,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{7}
}

func (x *QueryRequest) GetTimeSubmitted() int64 {
	if x != nil {
		return x.TimeSubmitted
	}
	return 0
}

type ClientList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clients map[string]*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ClientList) Reset() {
	*x = ClientList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientList) ProtoMessage() {}

func (x *ClientList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientList.ProtoReflect.Descriptor instead.
func (*ClientList) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{8}
}

func (x *ClientList) GetClients() map[string]*Client {
	if x != nil {
		return x.Clients
	}
	return nil
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address      string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	LastPingTime int64  `protobuf:"varint,3,opt,name=last_ping_time,json=lastPingTime,proto3" json:"last_ping_time,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{9}
}

func (x *Client) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Client) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Client) GetLastPingTime() int64 {
	if x != nil {
		return x.LastPingTime
	}
	return 0
}

type ClientName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ClientName) Reset() {
	*x = ClientName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientName) ProtoMessage() {}

func (x *ClientName) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientName.ProtoReflect.Descriptor instead.
func (*ClientName) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{10}
}

func (x *ClientName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DebugRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug bool `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *DebugRequest) Reset() {
	*x = DebugRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugRequest) ProtoMessage() {}

func (x *DebugRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugRequest.ProtoReflect.Descriptor instead.
func (*DebugRequest) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{11}
}

func (x *DebugRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type DebugResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp string `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *DebugResponse) Reset() {
	*x = DebugResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugResponse) ProtoMessage() {}

func (x *DebugResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugResponse.ProtoReflect.Descriptor instead.
func (*DebugResponse) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{12}
}

func (x *DebugResponse) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

type Config_Deluge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	MaxTorrents int64  `protobuf:"varint,3,opt,name=max_torrents,json=maxTorrents,proto3" json:"max_torrents,omitempty"`
}

func (x *Config_Deluge) Reset() {
	*x = Config_Deluge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Deluge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Deluge) ProtoMessage() {}

func (x *Config_Deluge) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Deluge.ProtoReflect.Descriptor instead.
func (*Config_Deluge) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Config_Deluge) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Config_Deluge) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Config_Deluge) GetMaxTorrents() int64 {
	if x != nil {
		return x.MaxTorrents
	}
	return 0
}

type Config_LoadAvg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxLoad float64 `protobuf:"fixed64,1,opt,name=max_load,json=maxLoad,proto3" json:"max_load,omitempty"`
}

func (x *Config_LoadAvg) Reset() {
	*x = Config_LoadAvg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_LoadAvg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_LoadAvg) ProtoMessage() {}

func (x *Config_LoadAvg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_LoadAvg.ProtoReflect.Descriptor instead.
func (*Config_LoadAvg) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Config_LoadAvg) GetMaxLoad() float64 {
	if x != nil {
		return x.MaxLoad
	}
	return 0
}

type Config_DiskSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition string  `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	MaxUsage  float64 `protobuf:"fixed64,2,opt,name=max_usage,json=maxUsage,proto3" json:"max_usage,omitempty"`
	MinFreeGb int64   `protobuf:"varint,3,opt,name=min_free_gb,json=minFreeGb,proto3" json:"min_free_gb,omitempty"`
}

func (x *Config_DiskSpace) Reset() {
	*x = Config_DiskSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_DiskSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_DiskSpace) ProtoMessage() {}

func (x *Config_DiskSpace) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_DiskSpace.ProtoReflect.Descriptor instead.
func (*Config_DiskSpace) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Config_DiskSpace) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *Config_DiskSpace) GetMaxUsage() float64 {
	if x != nil {
		return x.MaxUsage
	}
	return 0
}

func (x *Config_DiskSpace) GetMinFreeGb() int64 {
	if x != nil {
		return x.MinFreeGb
	}
	return 0
}

type Config_ProcessExists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	User string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Config_ProcessExists) Reset() {
	*x = Config_ProcessExists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_ProcessExists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_ProcessExists) ProtoMessage() {}

func (x *Config_ProcessExists) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_ProcessExists.ProtoReflect.Descriptor instead.
func (*Config_ProcessExists) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{6, 3}
}

func (x *Config_ProcessExists) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Config_ProcessExists) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type Config_GetURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url          string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ExpectedBody string `protobuf:"bytes,2,opt,name=expected_body,json=expectedBody,proto3" json:"expected_body,omitempty"`
}

func (x *Config_GetURL) Reset() {
	*x = Config_GetURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_GetURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_GetURL) ProtoMessage() {}

func (x *Config_GetURL) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_GetURL.ProtoReflect.Descriptor instead.
func (*Config_GetURL) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{6, 4}
}

func (x *Config_GetURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Config_GetURL) GetExpectedBody() string {
	if x != nil {
		return x.ExpectedBody
	}
	return ""
}

type Config_Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxUsage float64 `protobuf:"fixed64,1,opt,name=max_usage,json=maxUsage,proto3" json:"max_usage,omitempty"`
}

func (x *Config_Memory) Reset() {
	*x = Config_Memory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Memory) ProtoMessage() {}

func (x *Config_Memory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Memory.ProtoReflect.Descriptor instead.
func (*Config_Memory) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{6, 5}
}

func (x *Config_Memory) GetMaxUsage() float64 {
	if x != nil {
		return x.MaxUsage
	}
	return 0
}

type Config_Postgres struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectString string `protobuf:"bytes,1,opt,name=connect_string,json=connectString,proto3" json:"connect_string,omitempty"`
	ClientAddress string `protobuf:"bytes,2,opt,name=client_address,json=clientAddress,proto3" json:"client_address,omitempty"`
}

func (x *Config_Postgres) Reset() {
	*x = Config_Postgres{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gorram_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Postgres) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Postgres) ProtoMessage() {}

func (x *Config_Postgres) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gorram_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Postgres.ProtoReflect.Descriptor instead.
func (*Config_Postgres) Descriptor() ([]byte, []int) {
	return file_proto_gorram_proto_rawDescGZIP(), []int{6, 6}
}

func (x *Config_Postgres) GetConnectString() string {
	if x != nil {
		return x.ConnectString
	}
	return ""
}

func (x *Config_Postgres) GetClientAddress() string {
	if x != nil {
		return x.ClientAddress
	}
	return ""
}

var File_proto_gorram_proto protoreflect.FileDescriptor

var file_proto_gorram_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x72, 0x72, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x07, 0x50,
	0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x66, 0x67, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x66, 0x67,
	0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x35, 0x0a, 0x0c, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0f, 0x63,
	0x66, 0x67, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x66, 0x67, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x79,
	0x6e, 0x63, 0x22, 0x42, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12,
	0x35, 0x0a, 0x16, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x5f,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x05, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x22, 0x0a,
	0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x05, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f,
	0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x22, 0x30, 0x0a,
	0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xcc, 0x07, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x6c,
	0x75, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x75, 0x67, 0x65, 0x52,
	0x06, 0x64, 0x65, 0x6c, 0x75, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x61,
	0x76, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x67, 0x52,
	0x07, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x35, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x06, 0x67,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x1a, 0x59, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x75, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x24, 0x0a, 0x07, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x4c, 0x6f, 0x61, 0x64, 0x1a, 0x66, 0x0a, 0x09, 0x44,
	0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f,
	0x67, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x46, 0x72, 0x65,
	0x65, 0x47, 0x62, 0x1a, 0x37, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x3f, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x1a, 0x25, 0x0a,
	0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x58, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x35,
	0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x49,
	0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x06, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x22,
	0x23, 0x0a, 0x0d, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x65, 0x73, 0x70, 0x32, 0xd1, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x12, 0x2e, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x00, 0x12, 0x2d, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x31, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12,
	0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x1a, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x00, 0x32, 0xa3, 0x01, 0x0a, 0x07, 0x51, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x08,
	0x5a, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_gorram_proto_rawDescOnce sync.Once
	file_proto_gorram_proto_rawDescData = file_proto_gorram_proto_rawDesc
)

func file_proto_gorram_proto_rawDescGZIP() []byte {
	file_proto_gorram_proto_rawDescOnce.Do(func() {
		file_proto_gorram_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_gorram_proto_rawDescData)
	})
	return file_proto_gorram_proto_rawDescData
}

var file_proto_gorram_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_gorram_proto_goTypes = []interface{}{
	(*PingMsg)(nil),              // 0: proto.PingMsg
	(*PingResponse)(nil),         // 1: proto.PingResponse
	(*Submitted)(nil),            // 2: proto.Submitted
	(*Issue)(nil),                // 3: proto.Issue
	(*Alert)(nil),                // 4: proto.Alert
	(*ConfigRequest)(nil),        // 5: proto.ConfigRequest
	(*Config)(nil),               // 6: proto.Config
	(*QueryRequest)(nil),         // 7: proto.QueryRequest
	(*ClientList)(nil),           // 8: proto.ClientList
	(*Client)(nil),               // 9: proto.Client
	(*ClientName)(nil),           // 10: proto.ClientName
	(*DebugRequest)(nil),         // 11: proto.DebugRequest
	(*DebugResponse)(nil),        // 12: proto.DebugResponse
	(*Config_Deluge)(nil),        // 13: proto.Config.Deluge
	(*Config_LoadAvg)(nil),       // 14: proto.Config.LoadAvg
	(*Config_DiskSpace)(nil),     // 15: proto.Config.DiskSpace
	(*Config_ProcessExists)(nil), // 16: proto.Config.ProcessExists
	(*Config_GetURL)(nil),        // 17: proto.Config.GetURL
	(*Config_Memory)(nil),        // 18: proto.Config.Memory
	(*Config_Postgres)(nil),      // 19: proto.Config.Postgres
	nil,                          // 20: proto.ClientList.ClientsEntry
}
var file_proto_gorram_proto_depIdxs = []int32{
	3,  // 0: proto.Alert.issue:type_name -> proto.Issue
	13, // 1: proto.Config.deluge:type_name -> proto.Config.Deluge
	14, // 2: proto.Config.loadavg:type_name -> proto.Config.LoadAvg
	15, // 3: proto.Config.diskspace:type_name -> proto.Config.DiskSpace
	16, // 4: proto.Config.process:type_name -> proto.Config.ProcessExists
	17, // 5: proto.Config.get_url:type_name -> proto.Config.GetURL
	18, // 6: proto.Config.memory:type_name -> proto.Config.Memory
	19, // 7: proto.Config.postgres:type_name -> proto.Config.Postgres
	20, // 8: proto.ClientList.clients:type_name -> proto.ClientList.ClientsEntry
	9,  // 9: proto.ClientList.ClientsEntry.value:type_name -> proto.Client
	5,  // 10: proto.Reporter.Hello:input_type -> proto.ConfigRequest
	0,  // 11: proto.Reporter.Ping:input_type -> proto.PingMsg
	3,  // 12: proto.Reporter.RecordIssue:input_type -> proto.Issue
	5,  // 13: proto.Reporter.ConfigSync:input_type -> proto.ConfigRequest
	7,  // 14: proto.Querier.List:input_type -> proto.QueryRequest
	10, // 15: proto.Querier.Delete:input_type -> proto.ClientName
	11, // 16: proto.Querier.Debug:input_type -> proto.DebugRequest
	6,  // 17: proto.Reporter.Hello:output_type -> proto.Config
	1,  // 18: proto.Reporter.Ping:output_type -> proto.PingResponse
	2,  // 19: proto.Reporter.RecordIssue:output_type -> proto.Submitted
	6,  // 20: proto.Reporter.ConfigSync:output_type -> proto.Config
	8,  // 21: proto.Querier.List:output_type -> proto.ClientList
	8,  // 22: proto.Querier.Delete:output_type -> proto.ClientList
	12, // 23: proto.Querier.Debug:output_type -> proto.DebugResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_gorram_proto_init() }
func file_proto_gorram_proto_init() {
	if File_proto_gorram_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_gorram_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submitted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Issue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Deluge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_LoadAvg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_DiskSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_ProcessExists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_GetURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Memory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gorram_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Postgres); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_gorram_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_gorram_proto_goTypes,
		DependencyIndexes: file_proto_gorram_proto_depIdxs,
		MessageInfos:      file_proto_gorram_proto_msgTypes,
	}.Build()
	File_proto_gorram_proto = out.File
	file_proto_gorram_proto_rawDesc = nil
	file_proto_gorram_proto_goTypes = nil
	file_proto_gorram_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReporterClient is the client API for Reporter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReporterClient interface {
	// Hello should be called once upon initial connection. It syncs the config and stops any timers
	Hello(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*Config, error)
	// Ping is a heartbeat check, ran every X seconds to ensure a client is still alive
	// The cfg_last_updated variable sent, and cfg_out_of_sync received also allow syncing the config
	Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingResponse, error)
	RecordIssue(ctx context.Context, opts ...grpc.CallOption) (Reporter_RecordIssueClient, error)
	ConfigSync(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*Config, error)
}

type reporterClient struct {
	cc grpc.ClientConnInterface
}

func NewReporterClient(cc grpc.ClientConnInterface) ReporterClient {
	return &reporterClient{cc}
}

func (c *reporterClient) Hello(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/proto.Reporter/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reporterClient) Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/proto.Reporter/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reporterClient) RecordIssue(ctx context.Context, opts ...grpc.CallOption) (Reporter_RecordIssueClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Reporter_serviceDesc.Streams[0], "/proto.Reporter/RecordIssue", opts...)
	if err != nil {
		return nil, err
	}
	x := &reporterRecordIssueClient{stream}
	return x, nil
}

type Reporter_RecordIssueClient interface {
	Send(*Issue) error
	CloseAndRecv() (*Submitted, error)
	grpc.ClientStream
}

type reporterRecordIssueClient struct {
	grpc.ClientStream
}

func (x *reporterRecordIssueClient) Send(m *Issue) error {
	return x.ClientStream.SendMsg(m)
}

func (x *reporterRecordIssueClient) CloseAndRecv() (*Submitted, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Submitted)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *reporterClient) ConfigSync(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/proto.Reporter/ConfigSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReporterServer is the server API for Reporter service.
type ReporterServer interface {
	// Hello should be called once upon initial connection. It syncs the config and stops any timers
	Hello(context.Context, *ConfigRequest) (*Config, error)
	// Ping is a heartbeat check, ran every X seconds to ensure a client is still alive
	// The cfg_last_updated variable sent, and cfg_out_of_sync received also allow syncing the config
	Ping(context.Context, *PingMsg) (*PingResponse, error)
	RecordIssue(Reporter_RecordIssueServer) error
	ConfigSync(context.Context, *ConfigRequest) (*Config, error)
}

// UnimplementedReporterServer can be embedded to have forward compatible implementations.
type UnimplementedReporterServer struct {
}

func (*UnimplementedReporterServer) Hello(context.Context, *ConfigRequest) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}
func (*UnimplementedReporterServer) Ping(context.Context, *PingMsg) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedReporterServer) RecordIssue(Reporter_RecordIssueServer) error {
	return status.Errorf(codes.Unimplemented, "method RecordIssue not implemented")
}
func (*UnimplementedReporterServer) ConfigSync(context.Context, *ConfigRequest) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfigSync not implemented")
}

func RegisterReporterServer(s *grpc.Server, srv ReporterServer) {
	s.RegisterService(&_Reporter_serviceDesc, srv)
}

func _Reporter_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Reporter/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).Hello(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reporter_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Reporter/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).Ping(ctx, req.(*PingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reporter_RecordIssue_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ReporterServer).RecordIssue(&reporterRecordIssueServer{stream})
}

type Reporter_RecordIssueServer interface {
	SendAndClose(*Submitted) error
	Recv() (*Issue, error)
	grpc.ServerStream
}

type reporterRecordIssueServer struct {
	grpc.ServerStream
}

func (x *reporterRecordIssueServer) SendAndClose(m *Submitted) error {
	return x.ServerStream.SendMsg(m)
}

func (x *reporterRecordIssueServer) Recv() (*Issue, error) {
	m := new(Issue)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Reporter_ConfigSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).ConfigSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Reporter/ConfigSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).ConfigSync(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reporter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Reporter",
	HandlerType: (*ReporterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _Reporter_Hello_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Reporter_Ping_Handler,
		},
		{
			MethodName: "ConfigSync",
			Handler:    _Reporter_ConfigSync_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RecordIssue",
			Handler:       _Reporter_RecordIssue_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/gorram.proto",
}

// QuerierClient is the client API for Querier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuerierClient interface {
	List(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ClientList, error)
	Delete(ctx context.Context, in *ClientName, opts ...grpc.CallOption) (*ClientList, error)
	Debug(ctx context.Context, in *DebugRequest, opts ...grpc.CallOption) (*DebugResponse, error)
}

type querierClient struct {
	cc grpc.ClientConnInterface
}

func NewQuerierClient(cc grpc.ClientConnInterface) QuerierClient {
	return &querierClient{cc}
}

func (c *querierClient) List(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ClientList, error) {
	out := new(ClientList)
	err := c.cc.Invoke(ctx, "/proto.Querier/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *querierClient) Delete(ctx context.Context, in *ClientName, opts ...grpc.CallOption) (*ClientList, error) {
	out := new(ClientList)
	err := c.cc.Invoke(ctx, "/proto.Querier/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *querierClient) Debug(ctx context.Context, in *DebugRequest, opts ...grpc.CallOption) (*DebugResponse, error) {
	out := new(DebugResponse)
	err := c.cc.Invoke(ctx, "/proto.Querier/Debug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuerierServer is the server API for Querier service.
type QuerierServer interface {
	List(context.Context, *QueryRequest) (*ClientList, error)
	Delete(context.Context, *ClientName) (*ClientList, error)
	Debug(context.Context, *DebugRequest) (*DebugResponse, error)
}

// UnimplementedQuerierServer can be embedded to have forward compatible implementations.
type UnimplementedQuerierServer struct {
}

func (*UnimplementedQuerierServer) List(context.Context, *QueryRequest) (*ClientList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedQuerierServer) Delete(context.Context, *ClientName) (*ClientList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedQuerierServer) Debug(context.Context, *DebugRequest) (*DebugResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Debug not implemented")
}

func RegisterQuerierServer(s *grpc.Server, srv QuerierServer) {
	s.RegisterService(&_Querier_serviceDesc, srv)
}

func _Querier_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuerierServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Querier/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuerierServer).List(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Querier_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuerierServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Querier/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuerierServer).Delete(ctx, req.(*ClientName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Querier_Debug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DebugRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuerierServer).Debug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Querier/Debug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuerierServer).Debug(ctx, req.(*DebugRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Querier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Querier",
	HandlerType: (*QuerierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Querier_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Querier_Delete_Handler,
		},
		{
			MethodName: "Debug",
			Handler:    _Querier_Debug_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gorram.proto",
}
