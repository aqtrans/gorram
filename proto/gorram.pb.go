// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/gorram.proto

package gorram

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingMsg struct {
	IsAlive              bool     `protobuf:"varint,1,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"`
	CfgLastUpdated       int64    `protobuf:"varint,2,opt,name=cfg_last_updated,json=cfgLastUpdated,proto3" json:"cfg_last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMsg) Reset()         { *m = PingMsg{} }
func (m *PingMsg) String() string { return proto.CompactTextString(m) }
func (*PingMsg) ProtoMessage()    {}
func (*PingMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{0}
}

func (m *PingMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMsg.Unmarshal(m, b)
}
func (m *PingMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMsg.Marshal(b, m, deterministic)
}
func (m *PingMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMsg.Merge(m, src)
}
func (m *PingMsg) XXX_Size() int {
	return xxx_messageInfo_PingMsg.Size(m)
}
func (m *PingMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PingMsg proto.InternalMessageInfo

func (m *PingMsg) GetIsAlive() bool {
	if m != nil {
		return m.IsAlive
	}
	return false
}

func (m *PingMsg) GetCfgLastUpdated() int64 {
	if m != nil {
		return m.CfgLastUpdated
	}
	return 0
}

type PingResponse struct {
	CfgOutOfSync         bool     `protobuf:"varint,1,opt,name=cfg_out_of_sync,json=cfgOutOfSync,proto3" json:"cfg_out_of_sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{1}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetCfgOutOfSync() bool {
	if m != nil {
		return m.CfgOutOfSync
	}
	return false
}

type Submitted struct {
	SuccessfullySubmitted bool     `protobuf:"varint,1,opt,name=successfully_submitted,json=successfullySubmitted,proto3" json:"successfully_submitted,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Submitted) Reset()         { *m = Submitted{} }
func (m *Submitted) String() string { return proto.CompactTextString(m) }
func (*Submitted) ProtoMessage()    {}
func (*Submitted) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{2}
}

func (m *Submitted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Submitted.Unmarshal(m, b)
}
func (m *Submitted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Submitted.Marshal(b, m, deterministic)
}
func (m *Submitted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Submitted.Merge(m, src)
}
func (m *Submitted) XXX_Size() int {
	return xxx_messageInfo_Submitted.Size(m)
}
func (m *Submitted) XXX_DiscardUnknown() {
	xxx_messageInfo_Submitted.DiscardUnknown(m)
}

var xxx_messageInfo_Submitted proto.InternalMessageInfo

func (m *Submitted) GetSuccessfullySubmitted() bool {
	if m != nil {
		return m.SuccessfullySubmitted
	}
	return false
}

type Issue struct {
	// Host that generated the issue
	// NOTE: THIS SHOULD BE SET BY THE SERVER!
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Title of the check that generated the issue
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Message of the issue
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Issue) Reset()         { *m = Issue{} }
func (m *Issue) String() string { return proto.CompactTextString(m) }
func (*Issue) ProtoMessage()    {}
func (*Issue) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{3}
}

func (m *Issue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Issue.Unmarshal(m, b)
}
func (m *Issue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Issue.Marshal(b, m, deterministic)
}
func (m *Issue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Issue.Merge(m, src)
}
func (m *Issue) XXX_Size() int {
	return xxx_messageInfo_Issue.Size(m)
}
func (m *Issue) XXX_DiscardUnknown() {
	xxx_messageInfo_Issue.DiscardUnknown(m)
}

var xxx_messageInfo_Issue proto.InternalMessageInfo

func (m *Issue) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Issue) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Issue) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Alert struct {
	Issue *Issue `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	// When issue was sent
	TimeSubmitted int64 `protobuf:"varint,3,opt,name=time_submitted,json=timeSubmitted,proto3" json:"time_submitted,omitempty"`
	// How many times this identical alert has been sent
	Occurrences          int64    `protobuf:"varint,4,opt,name=occurrences,proto3" json:"occurrences,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alert) Reset()         { *m = Alert{} }
func (m *Alert) String() string { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()    {}
func (*Alert) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{4}
}

func (m *Alert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alert.Unmarshal(m, b)
}
func (m *Alert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alert.Marshal(b, m, deterministic)
}
func (m *Alert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alert.Merge(m, src)
}
func (m *Alert) XXX_Size() int {
	return xxx_messageInfo_Alert.Size(m)
}
func (m *Alert) XXX_DiscardUnknown() {
	xxx_messageInfo_Alert.DiscardUnknown(m)
}

var xxx_messageInfo_Alert proto.InternalMessageInfo

func (m *Alert) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

func (m *Alert) GetTimeSubmitted() int64 {
	if m != nil {
		return m.TimeSubmitted
	}
	return 0
}

func (m *Alert) GetOccurrences() int64 {
	if m != nil {
		return m.Occurrences
	}
	return 0
}

type ConfigRequest struct {
	ClientName           string   `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigRequest) Reset()         { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()    {}
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{5}
}

func (m *ConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRequest.Unmarshal(m, b)
}
func (m *ConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRequest.Marshal(b, m, deterministic)
}
func (m *ConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRequest.Merge(m, src)
}
func (m *ConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigRequest.Size(m)
}
func (m *ConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRequest proto.InternalMessageInfo

func (m *ConfigRequest) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

type Config struct {
	// Used internally to tell when config was last updated
	LastUpdated int64 `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// How often checks should be performed on the client
	Interval int64 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Configurations for various checks
	Deluge    *Config_Deluge          `protobuf:"bytes,3,opt,name=deluge,proto3" json:"deluge,omitempty"`
	Loadavg   *Config_LoadAvg         `protobuf:"bytes,4,opt,name=loadavg,proto3" json:"loadavg,omitempty"`
	Diskspace []*Config_DiskSpace     `protobuf:"bytes,5,rep,name=diskspace,proto3" json:"diskspace,omitempty"`
	Process   []*Config_ProcessExists `protobuf:"bytes,6,rep,name=process,proto3" json:"process,omitempty"`
	GetUrl    []*Config_GetURL        `protobuf:"bytes,7,rep,name=get_url,json=getUrl,proto3" json:"get_url,omitempty"`
	// A string of enabled checks
	EnabledChecks string `protobuf:"bytes,8,opt,name=enabled_checks,json=enabledChecks,proto3" json:"enabled_checks,omitempty"`
	// Whether client is required to connect
	// Since the server is stateless, this ensures an offline client is detected when the server is restarted
	Required             bool             `protobuf:"varint,9,opt,name=required,proto3" json:"required,omitempty"`
	Memory               *Config_Memory   `protobuf:"bytes,10,opt,name=memory,proto3" json:"memory,omitempty"`
	Postgres             *Config_Postgres `protobuf:"bytes,11,opt,name=postgres,proto3" json:"postgres,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{6}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetLastUpdated() int64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *Config) GetInterval() int64 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *Config) GetDeluge() *Config_Deluge {
	if m != nil {
		return m.Deluge
	}
	return nil
}

func (m *Config) GetLoadavg() *Config_LoadAvg {
	if m != nil {
		return m.Loadavg
	}
	return nil
}

func (m *Config) GetDiskspace() []*Config_DiskSpace {
	if m != nil {
		return m.Diskspace
	}
	return nil
}

func (m *Config) GetProcess() []*Config_ProcessExists {
	if m != nil {
		return m.Process
	}
	return nil
}

func (m *Config) GetGetUrl() []*Config_GetURL {
	if m != nil {
		return m.GetUrl
	}
	return nil
}

func (m *Config) GetEnabledChecks() string {
	if m != nil {
		return m.EnabledChecks
	}
	return ""
}

func (m *Config) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *Config) GetMemory() *Config_Memory {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *Config) GetPostgres() *Config_Postgres {
	if m != nil {
		return m.Postgres
	}
	return nil
}

type Config_Deluge struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	MaxTorrents          int64    `protobuf:"varint,3,opt,name=max_torrents,json=maxTorrents,proto3" json:"max_torrents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config_Deluge) Reset()         { *m = Config_Deluge{} }
func (m *Config_Deluge) String() string { return proto.CompactTextString(m) }
func (*Config_Deluge) ProtoMessage()    {}
func (*Config_Deluge) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{6, 0}
}

func (m *Config_Deluge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config_Deluge.Unmarshal(m, b)
}
func (m *Config_Deluge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config_Deluge.Marshal(b, m, deterministic)
}
func (m *Config_Deluge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config_Deluge.Merge(m, src)
}
func (m *Config_Deluge) XXX_Size() int {
	return xxx_messageInfo_Config_Deluge.Size(m)
}
func (m *Config_Deluge) XXX_DiscardUnknown() {
	xxx_messageInfo_Config_Deluge.DiscardUnknown(m)
}

var xxx_messageInfo_Config_Deluge proto.InternalMessageInfo

func (m *Config_Deluge) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Config_Deluge) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Config_Deluge) GetMaxTorrents() int64 {
	if m != nil {
		return m.MaxTorrents
	}
	return 0
}

type Config_LoadAvg struct {
	MaxLoad              float64  `protobuf:"fixed64,1,opt,name=max_load,json=maxLoad,proto3" json:"max_load,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config_LoadAvg) Reset()         { *m = Config_LoadAvg{} }
func (m *Config_LoadAvg) String() string { return proto.CompactTextString(m) }
func (*Config_LoadAvg) ProtoMessage()    {}
func (*Config_LoadAvg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{6, 1}
}

func (m *Config_LoadAvg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config_LoadAvg.Unmarshal(m, b)
}
func (m *Config_LoadAvg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config_LoadAvg.Marshal(b, m, deterministic)
}
func (m *Config_LoadAvg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config_LoadAvg.Merge(m, src)
}
func (m *Config_LoadAvg) XXX_Size() int {
	return xxx_messageInfo_Config_LoadAvg.Size(m)
}
func (m *Config_LoadAvg) XXX_DiscardUnknown() {
	xxx_messageInfo_Config_LoadAvg.DiscardUnknown(m)
}

var xxx_messageInfo_Config_LoadAvg proto.InternalMessageInfo

func (m *Config_LoadAvg) GetMaxLoad() float64 {
	if m != nil {
		return m.MaxLoad
	}
	return 0
}

type Config_DiskSpace struct {
	Partition            string   `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	MaxUsage             float64  `protobuf:"fixed64,2,opt,name=max_usage,json=maxUsage,proto3" json:"max_usage,omitempty"`
	MinFreeGb            uint64   `protobuf:"varint,3,opt,name=min_free_gb,json=minFreeGb,proto3" json:"min_free_gb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config_DiskSpace) Reset()         { *m = Config_DiskSpace{} }
func (m *Config_DiskSpace) String() string { return proto.CompactTextString(m) }
func (*Config_DiskSpace) ProtoMessage()    {}
func (*Config_DiskSpace) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{6, 2}
}

func (m *Config_DiskSpace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config_DiskSpace.Unmarshal(m, b)
}
func (m *Config_DiskSpace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config_DiskSpace.Marshal(b, m, deterministic)
}
func (m *Config_DiskSpace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config_DiskSpace.Merge(m, src)
}
func (m *Config_DiskSpace) XXX_Size() int {
	return xxx_messageInfo_Config_DiskSpace.Size(m)
}
func (m *Config_DiskSpace) XXX_DiscardUnknown() {
	xxx_messageInfo_Config_DiskSpace.DiscardUnknown(m)
}

var xxx_messageInfo_Config_DiskSpace proto.InternalMessageInfo

func (m *Config_DiskSpace) GetPartition() string {
	if m != nil {
		return m.Partition
	}
	return ""
}

func (m *Config_DiskSpace) GetMaxUsage() float64 {
	if m != nil {
		return m.MaxUsage
	}
	return 0
}

func (m *Config_DiskSpace) GetMinFreeGb() uint64 {
	if m != nil {
		return m.MinFreeGb
	}
	return 0
}

type Config_ProcessExists struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config_ProcessExists) Reset()         { *m = Config_ProcessExists{} }
func (m *Config_ProcessExists) String() string { return proto.CompactTextString(m) }
func (*Config_ProcessExists) ProtoMessage()    {}
func (*Config_ProcessExists) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{6, 3}
}

func (m *Config_ProcessExists) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config_ProcessExists.Unmarshal(m, b)
}
func (m *Config_ProcessExists) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config_ProcessExists.Marshal(b, m, deterministic)
}
func (m *Config_ProcessExists) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config_ProcessExists.Merge(m, src)
}
func (m *Config_ProcessExists) XXX_Size() int {
	return xxx_messageInfo_Config_ProcessExists.Size(m)
}
func (m *Config_ProcessExists) XXX_DiscardUnknown() {
	xxx_messageInfo_Config_ProcessExists.DiscardUnknown(m)
}

var xxx_messageInfo_Config_ProcessExists proto.InternalMessageInfo

func (m *Config_ProcessExists) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Config_ProcessExists) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type Config_GetURL struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ExpectedBody         string   `protobuf:"bytes,2,opt,name=expected_body,json=expectedBody,proto3" json:"expected_body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config_GetURL) Reset()         { *m = Config_GetURL{} }
func (m *Config_GetURL) String() string { return proto.CompactTextString(m) }
func (*Config_GetURL) ProtoMessage()    {}
func (*Config_GetURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{6, 4}
}

func (m *Config_GetURL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config_GetURL.Unmarshal(m, b)
}
func (m *Config_GetURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config_GetURL.Marshal(b, m, deterministic)
}
func (m *Config_GetURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config_GetURL.Merge(m, src)
}
func (m *Config_GetURL) XXX_Size() int {
	return xxx_messageInfo_Config_GetURL.Size(m)
}
func (m *Config_GetURL) XXX_DiscardUnknown() {
	xxx_messageInfo_Config_GetURL.DiscardUnknown(m)
}

var xxx_messageInfo_Config_GetURL proto.InternalMessageInfo

func (m *Config_GetURL) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Config_GetURL) GetExpectedBody() string {
	if m != nil {
		return m.ExpectedBody
	}
	return ""
}

type Config_Memory struct {
	MaxUsage             float64  `protobuf:"fixed64,1,opt,name=max_usage,json=maxUsage,proto3" json:"max_usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config_Memory) Reset()         { *m = Config_Memory{} }
func (m *Config_Memory) String() string { return proto.CompactTextString(m) }
func (*Config_Memory) ProtoMessage()    {}
func (*Config_Memory) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{6, 5}
}

func (m *Config_Memory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config_Memory.Unmarshal(m, b)
}
func (m *Config_Memory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config_Memory.Marshal(b, m, deterministic)
}
func (m *Config_Memory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config_Memory.Merge(m, src)
}
func (m *Config_Memory) XXX_Size() int {
	return xxx_messageInfo_Config_Memory.Size(m)
}
func (m *Config_Memory) XXX_DiscardUnknown() {
	xxx_messageInfo_Config_Memory.DiscardUnknown(m)
}

var xxx_messageInfo_Config_Memory proto.InternalMessageInfo

func (m *Config_Memory) GetMaxUsage() float64 {
	if m != nil {
		return m.MaxUsage
	}
	return 0
}

type Config_Postgres struct {
	ConnectString        string   `protobuf:"bytes,1,opt,name=connect_string,json=connectString,proto3" json:"connect_string,omitempty"`
	ClientAddress        string   `protobuf:"bytes,2,opt,name=client_address,json=clientAddress,proto3" json:"client_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config_Postgres) Reset()         { *m = Config_Postgres{} }
func (m *Config_Postgres) String() string { return proto.CompactTextString(m) }
func (*Config_Postgres) ProtoMessage()    {}
func (*Config_Postgres) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{6, 6}
}

func (m *Config_Postgres) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config_Postgres.Unmarshal(m, b)
}
func (m *Config_Postgres) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config_Postgres.Marshal(b, m, deterministic)
}
func (m *Config_Postgres) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config_Postgres.Merge(m, src)
}
func (m *Config_Postgres) XXX_Size() int {
	return xxx_messageInfo_Config_Postgres.Size(m)
}
func (m *Config_Postgres) XXX_DiscardUnknown() {
	xxx_messageInfo_Config_Postgres.DiscardUnknown(m)
}

var xxx_messageInfo_Config_Postgres proto.InternalMessageInfo

func (m *Config_Postgres) GetConnectString() string {
	if m != nil {
		return m.ConnectString
	}
	return ""
}

func (m *Config_Postgres) GetClientAddress() string {
	if m != nil {
		return m.ClientAddress
	}
	return ""
}

type QueryRequest struct {
	// When query was sent
	TimeSubmitted        int64    `protobuf:"varint,3,opt,name=time_submitted,json=timeSubmitted,proto3" json:"time_submitted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{7}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetTimeSubmitted() int64 {
	if m != nil {
		return m.TimeSubmitted
	}
	return 0
}

type ClientList struct {
	Clients              map[string]*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ClientList) Reset()         { *m = ClientList{} }
func (m *ClientList) String() string { return proto.CompactTextString(m) }
func (*ClientList) ProtoMessage()    {}
func (*ClientList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{8}
}

func (m *ClientList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientList.Unmarshal(m, b)
}
func (m *ClientList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientList.Marshal(b, m, deterministic)
}
func (m *ClientList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientList.Merge(m, src)
}
func (m *ClientList) XXX_Size() int {
	return xxx_messageInfo_ClientList.Size(m)
}
func (m *ClientList) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientList.DiscardUnknown(m)
}

var xxx_messageInfo_ClientList proto.InternalMessageInfo

func (m *ClientList) GetClients() map[string]*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

type Client struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{9}
}

func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (m *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(m, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Client) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ClientName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientName) Reset()         { *m = ClientName{} }
func (m *ClientName) String() string { return proto.CompactTextString(m) }
func (*ClientName) ProtoMessage()    {}
func (*ClientName) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{10}
}

func (m *ClientName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientName.Unmarshal(m, b)
}
func (m *ClientName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientName.Marshal(b, m, deterministic)
}
func (m *ClientName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientName.Merge(m, src)
}
func (m *ClientName) XXX_Size() int {
	return xxx_messageInfo_ClientName.Size(m)
}
func (m *ClientName) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientName.DiscardUnknown(m)
}

var xxx_messageInfo_ClientName proto.InternalMessageInfo

func (m *ClientName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DebugRequest struct {
	Debug                bool     `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugRequest) Reset()         { *m = DebugRequest{} }
func (m *DebugRequest) String() string { return proto.CompactTextString(m) }
func (*DebugRequest) ProtoMessage()    {}
func (*DebugRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{11}
}

func (m *DebugRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugRequest.Unmarshal(m, b)
}
func (m *DebugRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugRequest.Marshal(b, m, deterministic)
}
func (m *DebugRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRequest.Merge(m, src)
}
func (m *DebugRequest) XXX_Size() int {
	return xxx_messageInfo_DebugRequest.Size(m)
}
func (m *DebugRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRequest proto.InternalMessageInfo

func (m *DebugRequest) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

type DebugResponse struct {
	Resp                 string   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugResponse) Reset()         { *m = DebugResponse{} }
func (m *DebugResponse) String() string { return proto.CompactTextString(m) }
func (*DebugResponse) ProtoMessage()    {}
func (*DebugResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97e6094d70a04c7, []int{12}
}

func (m *DebugResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugResponse.Unmarshal(m, b)
}
func (m *DebugResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugResponse.Marshal(b, m, deterministic)
}
func (m *DebugResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugResponse.Merge(m, src)
}
func (m *DebugResponse) XXX_Size() int {
	return xxx_messageInfo_DebugResponse.Size(m)
}
func (m *DebugResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DebugResponse proto.InternalMessageInfo

func (m *DebugResponse) GetResp() string {
	if m != nil {
		return m.Resp
	}
	return ""
}

func init() {
	proto.RegisterType((*PingMsg)(nil), "gorram.PingMsg")
	proto.RegisterType((*PingResponse)(nil), "gorram.PingResponse")
	proto.RegisterType((*Submitted)(nil), "gorram.Submitted")
	proto.RegisterType((*Issue)(nil), "gorram.Issue")
	proto.RegisterType((*Alert)(nil), "gorram.Alert")
	proto.RegisterType((*ConfigRequest)(nil), "gorram.ConfigRequest")
	proto.RegisterType((*Config)(nil), "gorram.Config")
	proto.RegisterType((*Config_Deluge)(nil), "gorram.Config.Deluge")
	proto.RegisterType((*Config_LoadAvg)(nil), "gorram.Config.LoadAvg")
	proto.RegisterType((*Config_DiskSpace)(nil), "gorram.Config.DiskSpace")
	proto.RegisterType((*Config_ProcessExists)(nil), "gorram.Config.ProcessExists")
	proto.RegisterType((*Config_GetURL)(nil), "gorram.Config.GetURL")
	proto.RegisterType((*Config_Memory)(nil), "gorram.Config.Memory")
	proto.RegisterType((*Config_Postgres)(nil), "gorram.Config.Postgres")
	proto.RegisterType((*QueryRequest)(nil), "gorram.QueryRequest")
	proto.RegisterType((*ClientList)(nil), "gorram.ClientList")
	proto.RegisterMapType((map[string]*Client)(nil), "gorram.ClientList.ClientsEntry")
	proto.RegisterType((*Client)(nil), "gorram.Client")
	proto.RegisterType((*ClientName)(nil), "gorram.ClientName")
	proto.RegisterType((*DebugRequest)(nil), "gorram.DebugRequest")
	proto.RegisterType((*DebugResponse)(nil), "gorram.DebugResponse")
}

func init() { proto.RegisterFile("proto/gorram.proto", fileDescriptor_f97e6094d70a04c7) }

var fileDescriptor_f97e6094d70a04c7 = []byte{
	// 1057 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0x36, 0x6d, 0x49, 0x94, 0x86, 0x92, 0x93, 0x7f, 0x91, 0xe4, 0x67, 0xd9, 0xa0, 0x71, 0x69,
	0x1b, 0xf0, 0x4d, 0x1d, 0x43, 0x86, 0xdd, 0xc3, 0x4d, 0xe1, 0x38, 0x69, 0x7a, 0x70, 0x0e, 0xa5,
	0x6b, 0xa0, 0xbd, 0x22, 0x28, 0x72, 0x44, 0x2f, 0x4c, 0x72, 0x99, 0xdd, 0xa5, 0x6b, 0x3d, 0x47,
	0x9f, 0xa2, 0xcf, 0xd3, 0xab, 0xbe, 0x4d, 0xb1, 0x07, 0xea, 0x54, 0x17, 0xc8, 0xdd, 0xce, 0x37,
	0x87, 0x9d, 0x99, 0x6f, 0x38, 0x4b, 0x20, 0x35, 0x67, 0x92, 0x3d, 0xcf, 0x19, 0xe7, 0x49, 0x79,
	0xa8, 0x05, 0xd2, 0x33, 0x52, 0xf8, 0x16, 0xdc, 0xf7, 0xb4, 0xca, 0xdf, 0x88, 0x9c, 0x7c, 0x02,
	0x7d, 0x2a, 0xe2, 0xa4, 0xa0, 0xb7, 0xe8, 0x3b, 0x3b, 0xce, 0x41, 0x3f, 0x72, 0xa9, 0x38, 0x53,
	0x22, 0x39, 0x80, 0x87, 0xe9, 0x34, 0x8f, 0x8b, 0x44, 0xc8, 0xb8, 0xa9, 0xb3, 0x44, 0x62, 0xe6,
	0x6f, 0xee, 0x38, 0x07, 0x5b, 0xd1, 0x76, 0x3a, 0xcd, 0x2f, 0x12, 0x21, 0xaf, 0x0c, 0x1a, 0x9e,
	0xc0, 0x50, 0xc5, 0x8b, 0x50, 0xd4, 0xac, 0x12, 0x48, 0xf6, 0xe1, 0x81, 0xf2, 0x64, 0x8d, 0x8c,
	0xd9, 0x34, 0x16, 0xb3, 0x2a, 0xb5, 0xb1, 0x87, 0xe9, 0x34, 0x7f, 0xd7, 0xc8, 0x77, 0xd3, 0xcb,
	0x59, 0x95, 0x86, 0x2f, 0x60, 0x70, 0xd9, 0x4c, 0x4a, 0x2a, 0x25, 0x66, 0xe4, 0x04, 0x9e, 0x88,
	0x26, 0x4d, 0x51, 0x88, 0x69, 0x53, 0x14, 0xb3, 0x58, 0xb4, 0x1a, 0xeb, 0xfa, 0x78, 0x59, 0x3b,
	0x77, 0x0b, 0x7f, 0x82, 0xee, 0x0f, 0x42, 0x34, 0x48, 0x08, 0x74, 0xae, 0x99, 0x90, 0xda, 0x7a,
	0x10, 0xe9, 0x33, 0x79, 0x04, 0x5d, 0x49, 0x65, 0x81, 0x3a, 0xed, 0x41, 0x64, 0x04, 0xe2, 0x83,
	0x5b, 0xa2, 0x10, 0x49, 0x8e, 0xfe, 0x96, 0xc6, 0x5b, 0x31, 0x6c, 0xa0, 0x7b, 0x56, 0x20, 0x97,
	0x64, 0x17, 0xba, 0x54, 0x45, 0xd5, 0xd1, 0xbc, 0xf1, 0xe8, 0xd0, 0xb6, 0x51, 0x5f, 0x15, 0x19,
	0x1d, 0xd9, 0x87, 0x6d, 0x49, 0x4b, 0x5c, 0xca, 0x74, 0x4b, 0x77, 0x67, 0xa4, 0xd0, 0x45, 0x61,
	0x3b, 0xe0, 0xb1, 0x34, 0x6d, 0x38, 0xc7, 0x2a, 0x45, 0xe1, 0x77, 0xb4, 0xcd, 0x32, 0x14, 0x1e,
	0xc1, 0xe8, 0x9c, 0x55, 0x53, 0x9a, 0x47, 0xf8, 0xa1, 0x41, 0x21, 0xc9, 0x33, 0xf0, 0xd2, 0x82,
	0x62, 0x25, 0xe3, 0x2a, 0x29, 0xd1, 0x96, 0x04, 0x06, 0x7a, 0x9b, 0x94, 0x18, 0xfe, 0xe5, 0x42,
	0xcf, 0xb8, 0x90, 0xcf, 0x61, 0xb8, 0xc2, 0x90, 0x63, 0xe2, 0x17, 0x0b, 0x7a, 0x48, 0x00, 0x7d,
	0x5a, 0x49, 0xe4, 0xb7, 0x49, 0x61, 0x09, 0x9c, 0xcb, 0xe4, 0x0b, 0xe8, 0x65, 0x58, 0x34, 0xb6,
	0x17, 0xde, 0xf8, 0x71, 0x5b, 0xaa, 0x09, 0x7f, 0xf8, 0x52, 0x2b, 0x23, 0x6b, 0x44, 0x8e, 0xc0,
	0x2d, 0x58, 0x92, 0x25, 0xb7, 0xb9, 0x2e, 0xc4, 0x1b, 0x3f, 0x59, 0xb3, 0xbf, 0x60, 0x49, 0x76,
	0x76, 0x9b, 0x47, 0xad, 0x19, 0x39, 0x85, 0x41, 0x46, 0xc5, 0x8d, 0xa8, 0x93, 0x14, 0xfd, 0xee,
	0xce, 0xd6, 0x81, 0x37, 0xf6, 0xd7, 0xef, 0xa0, 0xe2, 0xe6, 0x52, 0xe9, 0xa3, 0x85, 0x29, 0x39,
	0x05, 0xb7, 0xe6, 0x4c, 0x31, 0xee, 0xf7, 0xb4, 0xd7, 0xd3, 0x35, 0xaf, 0xf7, 0x46, 0xfb, 0xea,
	0x8e, 0x0a, 0x29, 0xa2, 0xd6, 0x98, 0x1c, 0x82, 0x9b, 0xa3, 0x8c, 0x1b, 0x5e, 0xf8, 0xae, 0xf6,
	0x5b, 0xaf, 0xe8, 0x35, 0xca, 0xab, 0xe8, 0x22, 0xea, 0xe5, 0x28, 0xaf, 0x78, 0xa1, 0x58, 0xc4,
	0x2a, 0x99, 0x14, 0x98, 0xc5, 0xe9, 0x35, 0xa6, 0x37, 0xc2, 0xef, 0xeb, 0x76, 0x8f, 0x2c, 0x7a,
	0xae, 0x41, 0xd5, 0x43, 0x8e, 0x1f, 0x1a, 0xca, 0x31, 0xf3, 0x07, 0x7a, 0x20, 0xe7, 0xb2, 0xea,
	0x61, 0x89, 0x25, 0xe3, 0x33, 0x1f, 0xee, 0xed, 0xe1, 0x1b, 0xad, 0x8c, 0xac, 0x11, 0x39, 0x86,
	0x7e, 0xcd, 0x84, 0xcc, 0x39, 0x0a, 0xdf, 0xd3, 0x0e, 0xff, 0x5f, 0x2f, 0xcd, 0xaa, 0xa3, 0xb9,
	0x61, 0xf0, 0x1b, 0xf4, 0x0c, 0x15, 0xe4, 0x21, 0x6c, 0xa9, 0xe2, 0xcc, 0x50, 0xa8, 0xa3, 0xca,
	0xad, 0x4e, 0x84, 0xf8, 0x9d, 0xf1, 0xcc, 0x4e, 0xfa, 0x5c, 0x56, 0xe3, 0x51, 0x26, 0x77, 0xb1,
	0x64, 0x6a, 0xd8, 0xa4, 0xb0, 0x23, 0xea, 0x95, 0xc9, 0xdd, 0x2f, 0x16, 0x0a, 0xf6, 0xc0, 0xb5,
	0xac, 0xa9, 0x6d, 0xa0, 0xac, 0x15, 0x77, 0xfa, 0x02, 0x27, 0x72, 0xcb, 0xe4, 0x4e, 0x69, 0x83,
	0x29, 0x0c, 0xe6, 0x3c, 0x91, 0xa7, 0x30, 0xa8, 0x13, 0x2e, 0xa9, 0xa4, 0xac, 0xb2, 0x99, 0x2c,
	0x00, 0xf2, 0x29, 0x0c, 0x54, 0x94, 0x46, 0x7f, 0x62, 0x9b, 0x3a, 0x8c, 0x0a, 0x7b, 0xa5, 0x64,
	0xf2, 0x19, 0x78, 0x25, 0xad, 0xe2, 0x29, 0x47, 0x8c, 0xf3, 0x89, 0xce, 0xa7, 0x13, 0x0d, 0x4a,
	0x5a, 0x7d, 0xc7, 0x11, 0x5f, 0x4f, 0x82, 0x2f, 0x61, 0xb4, 0xc2, 0xac, 0xfa, 0xb0, 0xeb, 0x44,
	0x5e, 0xb7, 0x1f, 0xb6, 0x3a, 0x2b, 0xac, 0x11, 0xc8, 0x6d, 0xb5, 0xfa, 0x1c, 0x7c, 0x0b, 0x3d,
	0x43, 0xed, 0x3d, 0x1d, 0xda, 0x85, 0x11, 0xde, 0xd5, 0x98, 0x4a, 0xcc, 0xe2, 0x09, 0xcb, 0x66,
	0xd6, 0x71, 0xd8, 0x82, 0x2f, 0x58, 0x36, 0x0b, 0xf6, 0xa1, 0x67, 0x98, 0x5a, 0x2d, 0xc0, 0x59,
	0x2d, 0x20, 0xf8, 0x15, 0xfa, 0x2d, 0x3f, 0x6a, 0x78, 0x52, 0x56, 0x55, 0x98, 0xca, 0x58, 0x48,
	0x4e, 0xab, 0xdc, 0x5e, 0x3a, 0xb2, 0xe8, 0xa5, 0x06, 0xb5, 0x99, 0xf9, 0x9e, 0x93, 0x2c, 0xe3,
	0x6a, 0xa4, 0x37, 0xad, 0x99, 0x46, 0xcf, 0x0c, 0xa8, 0xd6, 0xe8, 0xcf, 0x0d, 0xf2, 0x59, 0xbb,
	0x06, 0x3e, 0x6e, 0xc1, 0x84, 0x7f, 0x38, 0x00, 0xe7, 0x3a, 0xd0, 0x05, 0x15, 0x92, 0x7c, 0x0d,
	0xae, 0x09, 0x2b, 0x7c, 0x47, 0x7f, 0x00, 0xcf, 0xe6, 0xd3, 0x35, 0x37, 0xb2, 0x47, 0xf1, 0xaa,
	0x92, 0x7c, 0x16, 0xb5, 0xf6, 0xc1, 0x8f, 0x30, 0x5c, 0x56, 0xa8, 0x46, 0xde, 0xe0, 0xac, 0x6d,
	0xe4, 0x0d, 0xce, 0xc8, 0x1e, 0x74, 0x6f, 0x93, 0xa2, 0x31, 0xb4, 0x7a, 0xe3, 0xed, 0xd5, 0xd0,
	0x91, 0x51, 0x7e, 0xb3, 0xf9, 0x95, 0x13, 0x9e, 0x42, 0xcf, 0x80, 0x8a, 0xac, 0xa5, 0x35, 0xa6,
	0xcf, 0x6a, 0x07, 0xaf, 0xb6, 0xa2, 0x15, 0xc3, 0x9d, 0xb6, 0x18, 0xb5, 0xe8, 0xee, 0xf3, 0x0d,
	0xf7, 0x60, 0xf8, 0x12, 0x27, 0xcd, 0x7c, 0x5b, 0x3e, 0x82, 0x6e, 0xa6, 0x64, 0xfb, 0x50, 0x18,
	0x21, 0xdc, 0x85, 0x91, 0xb5, 0xb2, 0x8f, 0x12, 0x81, 0x0e, 0x47, 0x51, 0xb7, 0xa1, 0xd4, 0x79,
	0xfc, 0xb7, 0x03, 0xfd, 0x08, 0x6b, 0xc6, 0x25, 0x72, 0x72, 0x04, 0xdd, 0xef, 0xb1, 0x28, 0x18,
	0x59, 0xfb, 0x7e, 0xed, 0x3d, 0xc1, 0xf6, 0x2a, 0x1c, 0x6e, 0x90, 0xe7, 0xd0, 0x51, 0xef, 0x1e,
	0x79, 0xd0, 0x6a, 0xec, 0xab, 0x1a, 0x3c, 0x5a, 0x06, 0xda, 0x0c, 0xc2, 0x0d, 0x72, 0x0c, 0x5e,
	0x84, 0x29, 0xe3, 0x99, 0x79, 0xb3, 0x56, 0xdf, 0x95, 0xe0, 0x7f, 0xad, 0xb8, 0xe0, 0x76, 0xe3,
	0xc0, 0x21, 0x27, 0x00, 0xe6, 0x46, 0xf5, 0x68, 0x7e, 0x74, 0x72, 0xe3, 0x3f, 0x1d, 0x70, 0xd5,
	0x38, 0x51, 0xe4, 0x64, 0x0c, 0x1d, 0x3d, 0x1b, 0xf3, 0xbc, 0x96, 0xe7, 0x2c, 0x20, 0xff, 0x1e,
	0x90, 0x70, 0x83, 0x8c, 0xf5, 0xc6, 0x41, 0x89, 0x64, 0x4d, 0xaf, 0x88, 0xf9, 0x0f, 0x9f, 0x53,
	0xe8, 0xea, 0xa6, 0x2f, 0x2e, 0x5a, 0x66, 0x2a, 0x78, 0xbc, 0x86, 0xb6, 0x7d, 0x99, 0xf4, 0xf4,
	0xff, 0xc9, 0xf1, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x9b, 0xe1, 0x99, 0xb5, 0x08, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReporterClient is the client API for Reporter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReporterClient interface {
	// Hello should be called once upon initial connection. It syncs the config and stops any timers
	Hello(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*Config, error)
	// Ping is a heartbeat check, ran every X seconds to ensure a client is still alive
	// The cfg_last_updated variable sent, and cfg_out_of_sync received also allow syncing the config
	Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingResponse, error)
	RecordIssue(ctx context.Context, opts ...grpc.CallOption) (Reporter_RecordIssueClient, error)
	ConfigSync(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*Config, error)
}

type reporterClient struct {
	cc *grpc.ClientConn
}

func NewReporterClient(cc *grpc.ClientConn) ReporterClient {
	return &reporterClient{cc}
}

func (c *reporterClient) Hello(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/gorram.Reporter/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reporterClient) Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/gorram.Reporter/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reporterClient) RecordIssue(ctx context.Context, opts ...grpc.CallOption) (Reporter_RecordIssueClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Reporter_serviceDesc.Streams[0], "/gorram.Reporter/RecordIssue", opts...)
	if err != nil {
		return nil, err
	}
	x := &reporterRecordIssueClient{stream}
	return x, nil
}

type Reporter_RecordIssueClient interface {
	Send(*Issue) error
	CloseAndRecv() (*Submitted, error)
	grpc.ClientStream
}

type reporterRecordIssueClient struct {
	grpc.ClientStream
}

func (x *reporterRecordIssueClient) Send(m *Issue) error {
	return x.ClientStream.SendMsg(m)
}

func (x *reporterRecordIssueClient) CloseAndRecv() (*Submitted, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Submitted)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *reporterClient) ConfigSync(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/gorram.Reporter/ConfigSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReporterServer is the server API for Reporter service.
type ReporterServer interface {
	// Hello should be called once upon initial connection. It syncs the config and stops any timers
	Hello(context.Context, *ConfigRequest) (*Config, error)
	// Ping is a heartbeat check, ran every X seconds to ensure a client is still alive
	// The cfg_last_updated variable sent, and cfg_out_of_sync received also allow syncing the config
	Ping(context.Context, *PingMsg) (*PingResponse, error)
	RecordIssue(Reporter_RecordIssueServer) error
	ConfigSync(context.Context, *ConfigRequest) (*Config, error)
}

// UnimplementedReporterServer can be embedded to have forward compatible implementations.
type UnimplementedReporterServer struct {
}

func (*UnimplementedReporterServer) Hello(ctx context.Context, req *ConfigRequest) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}
func (*UnimplementedReporterServer) Ping(ctx context.Context, req *PingMsg) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedReporterServer) RecordIssue(srv Reporter_RecordIssueServer) error {
	return status.Errorf(codes.Unimplemented, "method RecordIssue not implemented")
}
func (*UnimplementedReporterServer) ConfigSync(ctx context.Context, req *ConfigRequest) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfigSync not implemented")
}

func RegisterReporterServer(s *grpc.Server, srv ReporterServer) {
	s.RegisterService(&_Reporter_serviceDesc, srv)
}

func _Reporter_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gorram.Reporter/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).Hello(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reporter_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gorram.Reporter/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).Ping(ctx, req.(*PingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reporter_RecordIssue_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ReporterServer).RecordIssue(&reporterRecordIssueServer{stream})
}

type Reporter_RecordIssueServer interface {
	SendAndClose(*Submitted) error
	Recv() (*Issue, error)
	grpc.ServerStream
}

type reporterRecordIssueServer struct {
	grpc.ServerStream
}

func (x *reporterRecordIssueServer) SendAndClose(m *Submitted) error {
	return x.ServerStream.SendMsg(m)
}

func (x *reporterRecordIssueServer) Recv() (*Issue, error) {
	m := new(Issue)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Reporter_ConfigSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).ConfigSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gorram.Reporter/ConfigSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).ConfigSync(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reporter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gorram.Reporter",
	HandlerType: (*ReporterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _Reporter_Hello_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Reporter_Ping_Handler,
		},
		{
			MethodName: "ConfigSync",
			Handler:    _Reporter_ConfigSync_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RecordIssue",
			Handler:       _Reporter_RecordIssue_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/gorram.proto",
}

// QuerierClient is the client API for Querier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuerierClient interface {
	List(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ClientList, error)
	Delete(ctx context.Context, in *ClientName, opts ...grpc.CallOption) (*ClientList, error)
	Debug(ctx context.Context, in *DebugRequest, opts ...grpc.CallOption) (*DebugResponse, error)
}

type querierClient struct {
	cc *grpc.ClientConn
}

func NewQuerierClient(cc *grpc.ClientConn) QuerierClient {
	return &querierClient{cc}
}

func (c *querierClient) List(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ClientList, error) {
	out := new(ClientList)
	err := c.cc.Invoke(ctx, "/gorram.Querier/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *querierClient) Delete(ctx context.Context, in *ClientName, opts ...grpc.CallOption) (*ClientList, error) {
	out := new(ClientList)
	err := c.cc.Invoke(ctx, "/gorram.Querier/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *querierClient) Debug(ctx context.Context, in *DebugRequest, opts ...grpc.CallOption) (*DebugResponse, error) {
	out := new(DebugResponse)
	err := c.cc.Invoke(ctx, "/gorram.Querier/Debug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuerierServer is the server API for Querier service.
type QuerierServer interface {
	List(context.Context, *QueryRequest) (*ClientList, error)
	Delete(context.Context, *ClientName) (*ClientList, error)
	Debug(context.Context, *DebugRequest) (*DebugResponse, error)
}

// UnimplementedQuerierServer can be embedded to have forward compatible implementations.
type UnimplementedQuerierServer struct {
}

func (*UnimplementedQuerierServer) List(ctx context.Context, req *QueryRequest) (*ClientList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedQuerierServer) Delete(ctx context.Context, req *ClientName) (*ClientList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedQuerierServer) Debug(ctx context.Context, req *DebugRequest) (*DebugResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Debug not implemented")
}

func RegisterQuerierServer(s *grpc.Server, srv QuerierServer) {
	s.RegisterService(&_Querier_serviceDesc, srv)
}

func _Querier_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuerierServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gorram.Querier/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuerierServer).List(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Querier_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuerierServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gorram.Querier/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuerierServer).Delete(ctx, req.(*ClientName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Querier_Debug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DebugRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuerierServer).Debug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gorram.Querier/Debug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuerierServer).Debug(ctx, req.(*DebugRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Querier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gorram.Querier",
	HandlerType: (*QuerierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Querier_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Querier_Delete_Handler,
		},
		{
			MethodName: "Debug",
			Handler:    _Querier_Debug_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gorram.proto",
}
